FROM node:18-alpine

# Install development dependencies
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    libc6-compat \
    curl \
    && apk update

# Set working directory
WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./

# Install all dependencies (including dev dependencies)
RUN npm ci

# Copy all source files
COPY . .

# Create storage directories for local file uploads
# Note: `backend/storage` symlinks to `../storage/uploads` â†’ `/storage/uploads` in container
RUN mkdir -p \
    /storage/uploads/chains/featured \
    /storage/uploads/establishments \
    /storage/uploads/avatars

# Create non-root user for security
RUN addgroup --system --gid 1001 nodejs \
    && adduser --system --uid 1001 nodejs

# Ensure node user owns storage after creation
RUN chown -R nodejs:nodejs /storage

# Change ownership of app directory
RUN chown -R nodejs:nodejs /app
USER nodejs

# Expose the port Express.js runs on
EXPOSE 3001

# Set environment variables
ENV NODE_ENV=development
ENV PORT=3001

# Health check for development
HEALTHCHECK --interval=30s --timeout=5s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3001/health || exit 1

# Start the development server with hot reload (using nodemon)
CMD ["npm", "run", "dev"]